//
//  Artwork+CoreDataClass.swift
//  mona-ios
//
//  Created by Paul Chaffanet on 2019-05-16.
//  Copyright Â© 2019 Paul Chaffanet. All rights reserved.
//
//

import Foundation
import CoreData

@objc(Artwork)
public class Artwork: NSManagedObject {
    
    @nonobjc public class func fetchRequest(predicate: NSPredicate?, context: NSManagedObjectContext) -> [Artwork] {
        do {
            let fetchRequest : NSFetchRequest<Artwork> = Artwork.fetchRequest()
            fetchRequest.predicate = predicate
            let fetchedResults = try context.fetch(fetchRequest)
            return fetchedResults
        }
        catch {
            log.error("Fetch task failed: \(error)")
            return [Artwork]()
        }
    }
    
    @nonobjc public class func fetchRequest(id: Int16, context: NSManagedObjectContext) -> Artwork? {
        return fetchRequest(predicate: NSPredicate(format: "id = %d", id), context: context).first
    }
    
    // Bug with autogenerated methods in iOS 9
    public func addToPhotos(_ value: Photo) {
        guard let photosOrderedSet = photos else {
            photos = NSOrderedSet(object: value)
            return
        }
        let photosMutableOrderedSet = NSMutableOrderedSet(orderedSet: photosOrderedSet)
        photosMutableOrderedSet.add(value)
        photos = photosMutableOrderedSet
        //value.artwork = self
        NotificationCenter.default.post(name: .didAddPhotoToArtwork, object: nil, userInfo: [
            "photo" : value.localIdentifier,
            "artworkId" : id ])
    }
    
    public func removeFromPhotos(_ value: Photo) {
        guard let photosOrderedSet = photos else {
            return
        }
        let photosMutableOrderedSet = NSMutableOrderedSet(orderedSet: photosOrderedSet)
        photosMutableOrderedSet.remove(value)
        //value.artwork = nil
        photos = photosMutableOrderedSet.count == 0 ? photosMutableOrderedSet : nil
        NotificationCenter.default.post(name: .didRemovePhotoFromArtwork, object: nil, userInfo: [
            "photo" : value.localIdentifier,
            "artworkId" : id ])
    }
}
